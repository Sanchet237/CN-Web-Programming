STUDENT â€“ MARKS DATABASE

CREATE TABLE Students (Rollno INTEGER PRIMARY KEY, sname VARCHAR(30) NOT NULL, city VARCHAR(50), class VARCHAR(10));
CREATE TABLE Subjects (Scode VARCHAR(10) PRIMARY KEY, subject_name VARCHAR(20));
CREATE TABLE Students_Subjects (Rollno INTEGER, Scode VARCHAR(10), marks_scored INTEGER, PRIMARY KEY (Rollno, Scode), FOREIGN KEY (Rollno) REFERENCES Students(Rollno), FOREIGN KEY (Scode) REFERENCES Subjects(Scode));

INSERT INTO Students (Rollno, sname, city, class) VALUES (1, 'Amit', 'Mumbai', 'FYBCA'), (2, 'Anjali', 'Pune', 'SYBCA'), (3, 'Rahul', 'Nagpur', 'TYBCA'), (4, 'Arjun', 'Nashik', 'FYBCA');
INSERT INTO Subjects (Scode, subject_name) VALUES ('S101', 'DBMS'), ('S102', 'Math'), ('S103', 'Networking');
INSERT INTO Students_Subjects (Rollno, Scode, marks_scored) VALUES (1, 'S101', 95), (1, 'S102', 85), (2, 'S101', 78), (2, 'S102', 88), (3, 'S101', 92), (3, 'S103', 65), (4, 'S101', 81), (4, 'S102', 38);

Q.1) Create a View:

CREATE VIEW Students_DBMS_Above_80 AS SELECT s.sname FROM Students s JOIN Students_Subjects ss ON s.Rollno = ss.Rollno JOIN Subjects sub ON ss.Scode = sub.Scode WHERE sub.subject_name = 'DBMS' AND ss.marks_scored > 80;
SELECT * FROM Students_DBMS_Above_80;

CREATE VIEW Students_TYBCA_Details AS SELECT Rollno, sname, city, class FROM Students WHERE class = 'TYBCA';
SELECT * FROM Students_TYBCA_Details;

Q.2) Using above database solve following questions:

CREATE OR REPLACE FUNCTION notify_delete_student() RETURNS TRIGGER AS $$
BEGIN
RAISE NOTICE 'Student record is being deleted';
RETURN OLD;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER notify_student_delete
AFTER DELETE ON Students
FOR EACH ROW
EXECUTE FUNCTION notify_delete_student();

DELETE FROM Students WHERE Rollno = 101;

CREATE OR REPLACE FUNCTION get_subject_info(student_name VARCHAR) RETURNS VOID AS $$
DECLARE
subject_rec RECORD;
BEGIN
FOR subject_rec IN
SELECT sub.subject_name, ss.marks_scored
FROM Students s
JOIN Students_Subjects ss ON s.Rollno = ss.Rollno
JOIN Subjects sub ON ss.Scode = sub.Scode
WHERE s.sname = student_name
LOOP
RAISE NOTICE 'Subject: %, Marks: %', subject_rec.subject_name, subject_rec.marks_scored;
END LOOP;
END;
$$ LANGUAGE plpgsql;

SELECT get_subject_info('Amit');