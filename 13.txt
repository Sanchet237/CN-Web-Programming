STUDENT-TEACHER DATABASE

CREATE TABLE Student (Sno INTEGER PRIMARY KEY, sname VARCHAR(20) NOT NULL, sclass VARCHAR(10), saddr VARCHAR(30));
CREATE TABLE Teacher (Tno INTEGER PRIMARY KEY, tname VARCHAR(20) NOT NULL, qualification CHAR(15), experience INTEGER);
CREATE TABLE Student_Teacher (Sno INTEGER REFERENCES Student(Sno), Tno INTEGER REFERENCES Teacher(Tno), subject VARCHAR(30), PRIMARY KEY (Sno, Tno));

INSERT INTO Student (Sno, sname, sclass, saddr) VALUES (1, 'Rahul', '10th', 'Pune'), (2, 'Sneha', '12th', 'Mumbai'), (3, 'Amit', '11th', 'Pune'), (4, 'Vijay', '10th', 'Nashik');
INSERT INTO Teacher (Tno, tname, qualification, experience) VALUES (1, 'Sharma', 'Ph.D.', 10), (2, 'Joshi', 'M.Sc.', 4), (3, 'Singh', 'Ph.D.', 7), (4, 'Gupta', 'M.A.', 5);
INSERT INTO Student_Teacher (Sno, Tno, subject) VALUES (1, 1, 'Mathematics'), (1, 3, 'Physics'), (2, 2, 'Chemistry'), (3, 1, 'Mathematics'), (4, 3, 'Biology');

Q.1) Create a View:

CREATE VIEW PhDTeachers AS SELECT * FROM Teacher WHERE qualification = 'Ph.D.';
SELECT * FROM PhDTeachers;

CREATE VIEW StudentsInPune AS SELECT * FROM Student WHERE saddr = 'Pune';
SELECT * FROM StudentsInPune;

Q.2) Using above database solve following questions:

CREATE OR REPLACE FUNCTION validate_teacher_experience()
RETURNS TRIGGER AS $$
BEGIN
IF NEW.experience < 5 THEN
RAISE EXCEPTION 'Experience should be a minimum of 5 years';
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER before_insert_teacher_experience
BEFORE INSERT ON Teacher
FOR EACH ROW
EXECUTE FUNCTION validate_teacher_experience();

INSERT INTO Teacher VALUES (1, 'Mr. Smith', 'M.Sc.', 3);

CREATE OR REPLACE FUNCTION list_teachers_for_student(student_name VARCHAR)
RETURNS SETOF Teacher AS $$
DECLARE
teacher_record Teacher%ROWTYPE;
cur CURSOR FOR
SELECT t.*
FROM Teacher t
JOIN Student_Teacher st ON t.Tno = st.Tno
JOIN Student s ON st.Sno = s.Sno
WHERE s.sname = student_name;
BEGIN
OPEN cur;
LOOP
FETCH cur INTO teacher_record;
EXIT WHEN NOT FOUND;
RETURN NEXT teacher_record;
END LOOP;
CLOSE cur;
RETURN;
END;
$$ LANGUAGE plpgsql;

SELECT * FROM list_teachers_for_student('Rahul');