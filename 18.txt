MOVIE_ACTOR_PRODUCER

CREATE TABLE Movie (m_name VARCHAR(25), release_year INTEGER NOT NULL, budget DECIMAL, PRIMARY KEY (m_name, release_year));
CREATE TABLE Actor (a_name CHAR(30), city VARCHAR(30), PRIMARY KEY (a_name));
CREATE TABLE Producer (producer_id INTEGER, pname CHAR(30), p_address VARCHAR(30), PRIMARY KEY (producer_id));
CREATE TABLE Movie_Actor (m_name VARCHAR(25), release_year INTEGER, a_name CHAR(30), role VARCHAR(50), charges DECIMAL, PRIMARY KEY (m_name, release_year, a_name), FOREIGN KEY (m_name, release_year) REFERENCES Movie(m_name, release_year), FOREIGN KEY (a_name) REFERENCES Actor(a_name));
CREATE TABLE Movie_Producer (m_name VARCHAR(25), release_year INTEGER, producer_id INTEGER, PRIMARY KEY (m_name, release_year, producer_id), FOREIGN KEY (m_name, release_year) REFERENCES Movie(m_name, release_year), FOREIGN KEY (producer_id) REFERENCES Producer(producer_id));

INSERT INTO Movie VALUES ('Sholey', 1975, 5000000), ('Lagaan', 2001, 3000000), ('Taal', 1999, 2000000);
INSERT INTO Actor VALUES ('Amitabh Bachchan', 'Mumbai'), ('Aamir Khan', 'Mumbai'), ('Dharmendra', 'Pune'), ('Hema Malini', 'Delhi');
INSERT INTO Producer VALUES (1, 'Mr. Subhash Ghai', 'Mumbai'), (2, 'Yash Chopra', 'Pune');
INSERT INTO Movie_Actor VALUES ('Sholey', 1975, 'Amitabh Bachchan', 'Jai', 1000000), ('Sholey', 1975, 'Dharmendra', 'Veeru', 800000), ('Lagaan', 2001, 'Aamir Khan', 'Bhuvan', 1200000);
INSERT INTO Movie_Producer VALUES ('Sholey', 1975, 1), ('Lagaan', 2001, 2), ('Lagaan', 2001, 1) ('Taal', 1999, 1);

Q.1) Create a View:

CREATE VIEW Actors_In_Mumbai AS SELECT a_name FROM Actor WHERE city = 'Mumbai';
SELECT * FROM Actors_In_Mumbai;

CREATE VIEW Actors_In_Movies AS SELECT ma.m_name, ma.release_year, a.a_name, ma.role, ma.charges FROM Movie_Actor ma JOIN Actor a ON ma.a_name = a.a_name;
SELECT * FROM Actors_In_Movies;

Q.2) Using above database solve following questions:

CREATE OR REPLACE FUNCTION check_budget()
RETURNS TRIGGER AS $$
BEGIN
IF NEW.budget < 6000000 THEN
RAISE EXCEPTION 'Budget must be at least 60 lakhs.';
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER before_insert_budget
BEFORE INSERT ON Movie
FOR EACH ROW EXECUTE FUNCTION check_budget();

INSERT INTO Movie VALUES ('New Movie', 2023, 5000000);

CREATE OR REPLACE FUNCTION count_movies_by_producer(producer_name CHAR(30))
RETURNS INTEGER AS $$
DECLARE
movie_count INTEGER;
BEGIN
SELECT COUNT(*) INTO movie_count
FROM Movie_Producer mp
JOIN Producer p ON mp.producer_id = p.producer_id
WHERE p.pname = producer_name;
RETURN movie_count;
END;
$$ LANGUAGE plpgsql;

SELECT count_movies_by_producer('Mr. Subhash Ghai');